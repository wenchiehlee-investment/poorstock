name: Daily PoorStock Batch

on:
  schedule:
    - cron: '0 8 * * *'  # 每天台灣時間16:00 (UTC+8)
  workflow_dispatch:      # 可手動觸發

jobs:
  run-poorstock:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run GetAll.py
        run: python GetAll.py

      - name: Update README Status
        run: |
          python download_results_counts.py --update-readme
          echo "README.md status section updated"

      - name: Count generated files
        id: count_files
        run: |
          MD_COUNT=$(find poorstock -name "*.md" 2>/dev/null | wc -l || echo "0")
          echo "md_files=$MD_COUNT" >> $GITHUB_OUTPUT
          echo "Generated $MD_COUNT markdown files"

      - name: Commit and Push Results
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Add updated files
          git add README.md || true
          git add StockID_TWSE_TPEX.csv || true
          git add poorstock/*.md || true
          git add poorstock/*.csv || true
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            # Create commit message
            TIMESTAMP=$(date '+%Y-%m-%d %H:%M UTC')
            MD_FILES="${{ steps.count_files.outputs.md_files }}"
            TRIGGER_TYPE="${{ github.event_name }}"
            
            COMMIT_MSG="Update PoorStock Data (${MD_FILES} files) - ${TIMESTAMP}"
            if [[ "$TRIGGER_TYPE" == "workflow_dispatch" ]]; then
              COMMIT_MSG="$COMMIT_MSG [Manual]"
            else
              COMMIT_MSG="$COMMIT_MSG [Scheduled]"
            fi
            
            echo "Committing with message: $COMMIT_MSG"
            git commit -m "$COMMIT_MSG"
            git push
            echo "Changes committed and pushed successfully"
          fi